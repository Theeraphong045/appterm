"use client";
import React, { useState } from "react";
import {
    Button,
    Card,
    CardHeader,
    CardBody,
    CardFooter,
    Divider,
    Input,
    Autocomplete,
    AutocompleteItem,
} from "@nextui-org/react";
import { Icon } from "@iconify/react";
import Next_Link from "next/link";
import { useAuth, useSetting } from "../../../middleware/frontend";
import api from "../../../ess/api";
import Cookies from "js-cookie";
import Swal from "sweetalert2";
import { useRouter } from "next/navigation";
export default function Like_Form() {
    const router = useRouter()
    const { setting } = useSetting()
    const { user, isAuthenticated, update_user, loading } = useAuth()
    const [Service, setService] = useState()
    const [Link, setLink] = useState()
    const [Amount, setAmount] = useState()
    const [ons, setOns] = useState(false)
    const pum = async (e) => {
        e.preventDefault()

        var name = ''
        switch (Service) {
            case '7615':
                name = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏•‡∏Ñ‡πå [Like üëç] - ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ - 2K/‡∏ß‡∏±‡∏ô'
                break
            case '7616':
                name = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ [Love ‚ù§Ô∏è] - ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ - 2K/‡∏ß‡∏±‡∏ô'
                break
            case '7617':
                name = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ [Wow üò≤] - ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ - 2K/‡∏ß‡∏±‡∏ô'
                break
            case '7618':
                name = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ [Haha üòÇ] - ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ - 2K/‡∏ß‡∏±‡∏ô'
                break
            case '7619':
                name = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ [Sad üò•] - ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ - 2K/‡∏ß‡∏±‡∏ô'
                break
            case '7620':
                name = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ [Angry üò°] - ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ - 2K/‡∏ß‡∏±‡∏ô'
                break
        }
        await api.post('/buy/pum', {
            service: Service,
            link: Link,
            amount: Amount,
            name: name
        }, {
            headers: {
                authorization: Cookies.get('token')
            }
        })
            .then(async (d) => {
                await update_user()
                Swal.fire({
                    title: "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
                    text: d.data.msg,
                    icon: "success",
                    confirmButtonColor: '#802eec'
                }).then(() => {
                    router.push('/history')
                })
            })
            .catch((e) => {
                console.log(e)
                Swal.fire({
                    title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!",
                    text: e.response?.data.msg || e.message,
                    icon: "error",
                    confirmButtonColor: '#802eec'
                });
            })
    }
    return (
        <Card className="border-small border-default-200/20 shadow-medium backdrop-blur-md backdrop-saturate-150 bg-default-100/50  md:w-1/2">
            <form onSubmit={pum}>
                <CardBody className='my-3 text-center flex items-center h-full justify-center gap-5'>
                    <Autocomplete
                        isRequired
                        label="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÑ‡∏•‡∏Ñ‡πå"
                        // variant="bordered"
                        selectedKey={String(Service)}
                        onSelectionChange={setService}
                        className="max-w-sm light"
                    >
                        <AutocompleteItem key='7615' value={7615}>‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏•‡∏Ñ‡πå [Like üëç] - ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ - 2K/‡∏ß‡∏±‡∏ô</AutocompleteItem>
                        <AutocompleteItem key='7616' value={7616}>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ [Love ‚ù§Ô∏è] - ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ - 2K/‡∏ß‡∏±‡∏ô</AutocompleteItem>
                        <AutocompleteItem key='7617' value={7617}>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ [Wow üò≤] - ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ - 2K/‡∏ß‡∏±‡∏ô</AutocompleteItem>
                        <AutocompleteItem key='7618' value={7618}>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ [Haha üòÇ] - ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ - 2K/‡∏ß‡∏±‡∏ô</AutocompleteItem>
                        <AutocompleteItem key='7619' value={7619}>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ [Sad üò•] - ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ - 2K/‡∏ß‡∏±‡∏ô</AutocompleteItem>
                        <AutocompleteItem key='7620' value={7620}>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ [Angry üò°] - ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ - 2K/‡∏ß‡∏±‡∏ô</AutocompleteItem>
                    </Autocomplete>
                    <p className='text-medium'>‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ 50 - 2,000 ‡πÑ‡∏•‡∏Ñ‡πå ‡∏£‡∏≤‡∏Ñ‡∏≤ {setting.like} ‡∏ö‡∏≤‡∏ó/‡πÑ‡∏•‡∏Ñ‡πå</p>
                    <p className='text-medium'>‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß: 2K/‡∏ß‡∏±‡∏ô (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 1 - 60 ‡∏ô‡∏≤‡∏ó‡∏µ)</p>
                    <p className='text-medium'>‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô: ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 1 ‡∏õ‡∏µ</p>
                    <Input
                        isRequired
                        classNames={{
                            base: "max-w-sm light -mb-[2px] md:col-span-3",
                            inputWrapper:
                                "data-[hover=true]:z-10 group-data-[focus-visible=true]:z-10",
                        }}
                        label='‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÇ‡∏û‡∏™‡∏ï‡πå'
                        type="link"
                        // variant="bordered"
                        value={Link}
                        onChange={(e) => setLink(e.target.value)}
                    />
                    <Input
                        isRequired
                        classNames={{
                            base: "max-w-sm light -mb-[2px] md:col-span-3",
                            inputWrapper:
                                "data-[hover=true]:z-10 group-data-[focus-visible=true]:z-10",
                        }}
                        label='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏•‡∏Ñ‡πå'
                        type="number"
                        // variant="bordered"
                        value={Amount}
                        onChange={(e) => setAmount(e.target.value)}
                    />
                    <p className='text-medium'>‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£: {Amount * setting.like || 0} ‡∏ö‡∏≤‡∏ó</p>
                    {!isAuthenticated ?
                        <Next_Link href="/auth/signin">
                            <Button color="primary">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</Button>
                        </Next_Link>
                        :
                        <Button color="primary" type="submit" disabled={ons || !isAuthenticated}>‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</Button>
                    }
                </CardBody>
            </form>
        </Card>
    );
}
